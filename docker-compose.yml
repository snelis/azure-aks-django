version: "3"

services:
  database:
    image: timescale/timescaledb-postgis:latest-pg12
    environment:
      POSTGRES_DB: dev
      POSTGRES_USER: dev
      POSTGRES_PASSWORD: dev
    healthcheck:
      test: pg_isready -U dev -d dev -t 10
      interval: 1s
      timeout: 1s
      retries: 3

  app:
    build:
      context: .
      target: app
      args:
        - BUILD_DATE
        - BUILD_REVISION
        - BUILD_VERSION
    depends_on:
      database:
        condition: service_healthy
    volumes:
      - ./src:/app/src
      - ./deploy:/app/deploy
      - ./pyproject.toml:/app/pyproject.toml
      - ./fixtures:/app/fixtures
    environment:
      SECRET_KEY: "insecure"
      DEBUG: 0
      PYTHONBREAKPOINT:
      CORS_DEFAULT_ALLOWED_ORIGIN: "http://localhost:8080"
      UVICORN_CMD_ARGS: "--reload"
    depends_on:
      - placement
      - redis
    command: /app/deploy/run.sh

  dapr:
    image: "daprio/daprd:edge"
    command:
      - "./daprd"
      - "-app-id"
      - "main"
      - "-app-port"
      - "9000"
      - "-placement-host-address"
      - "placement:50005"
      - "-components-path"
      - "/components"
    volumes:
      - ./dapr/components/:/components
      - ./dapr/secrets.json:/secrets.json
    depends_on:
      - dev
    network_mode: "service:dev"

  placement:
    image: "daprio/dapr"
    command:
      - "./placement"
    ports:
      - "50005"

  dev:
    extends:
      service: app
    build:
      target: dev
    environment:
      DEBUG: "true"
    command: python manage.py runserver_plus --print-sql 0.0.0.0:8000

  test:
    extends:
      service: dev
    build:
      target: tests
    volumes:
      - ./tests:/app/tests
    environment:
      DJANGO_SETTINGS_MODULE: "main.settings"
      PYTEST_ADDOPTS:

  redis:
    image: "redis:alpine"
